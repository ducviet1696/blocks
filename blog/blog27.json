{
    "id": "blog27",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "blog27.jpg",
    "thumbnail": "blog27-4x3.webp",
    "description": "A component displaying blog articles with filters, featuring a breadcrumb navigator, an email form, and a \"Load More\" button, arranged in up to three columns.",
    "createdAt": "2025-09-26T21:44:43.676Z",
    "dependencies": [
        "\"@hookform/resolvers\"",
        "lucide-react",
        "react",
        "react-hook-form",
        "zod"
    ],
    "registryDependencies": [
        {
            "name": "aspect-ratio",
            "registryId": "shadcn",
            "registryItemUrl": "aspect-ratio",
            "docsUrl": "https://ui.shadcn.com/docs/components/aspect-ratio"
        },
        {
            "name": "breadcrumb",
            "registryId": "shadcn",
            "registryItemUrl": "breadcrumb",
            "docsUrl": "https://ui.shadcn.com/docs/components/breadcrumb"
        },
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        },
        {
            "name": "card",
            "registryId": "shadcn",
            "registryItemUrl": "card",
            "docsUrl": "https://ui.shadcn.com/docs/components/card"
        },
        {
            "name": "checkbox",
            "registryId": "shadcn",
            "registryItemUrl": "checkbox",
            "docsUrl": "https://ui.shadcn.com/docs/components/checkbox"
        },
        {
            "name": "form",
            "registryId": "shadcn",
            "registryItemUrl": "form",
            "docsUrl": "https://ui.shadcn.com/docs/components/form"
        },
        {
            "name": "label",
            "registryId": "shadcn",
            "registryItemUrl": "label",
            "docsUrl": "https://ui.shadcn.com/docs/components/label"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "blog"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Sep 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": false,
    "slug": "blog27",
    "collection": "block",
    "group": "blog",
    "code": "\"use client\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { ArrowRight, Slash } from \"lucide-react\";\nimport { Fragment, useCallback, useMemo, useState } from \"react\";\nimport { ControllerRenderProps, useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nimport { AspectRatio } from \"@/components/ui/aspect-ratio\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Form, FormControl, FormField, FormItem } from \"@/components/ui/form\";\nimport { Label } from \"@/components/ui/label\";\n\ninterface BreadcrumbItem {\n  label: string;\n  link: string;\n}\n\ninterface Post {\n  category: string;\n  title: string;\n  summary: string;\n  link: string;\n  cta: string;\n  thumbnail: string;\n}\n\ninterface Category {\n  label: string;\n  value: string;\n}\n\ninterface FilterFormProps {\n  categories: Array<Category>;\n  onCategoryChange: (selectedCategories: string[]) => void;\n}\n\ninterface BlogsResultProps {\n  posts: Array<Post>;\n  categories: Array<Category>;\n}\n\ninterface BreadcrumbBlogProps {\n  breadcrumb: Array<BreadcrumbItem>;\n}\n\nconst POSTS_PER_PAGE = 6;\n\nconst BREADCRUMB: Array<BreadcrumbItem> = [\n  {\n    label: \"Resources\",\n    link: \"#\",\n  },\n  {\n    label: \"Blogs\",\n    link: \"#\",\n  },\n];\n\nconst CATEGORIES: Array<Category> = [\n  {\n    label: \"All\",\n    value: \"all\",\n  },\n  {\n    label: \"Productivity\",\n    value: \"productivity\",\n  },\n  {\n    label: \"Accessibility\",\n    value: \"accessibility\",\n  },\n  {\n    label: \"Performance\",\n    value: \"performance\",\n  },\n];\n\nconst PRIMARY_POST: Post = {\n  category: \"Innovation Spotlight\",\n  title: \"How AI is Transforming Frontend Development\",\n  summary:\n    \"Explore how tools like GitHub Copilot, AI design generators, and code assistants are changing the way developers build UIs and ship features faster.\",\n  link: \"#\",\n  cta: \"Discover the Future\",\n  thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-1.svg\",\n};\n\nconst POSTS: Array<Post> = [\n  {\n    category: \"Productivity\",\n    title: \"5 VS Code Extensions That Will Save You Hours\",\n    summary:\n      \"Discover must-have extensions to boost your coding efficiency and streamline your workflow.\",\n    link: \"#\",\n    cta: \"Boost Your Editor\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-2.svg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Time Management for Developers: What Really Works\",\n    summary:\n      \"Learn proven strategies to avoid burnout and stay on top of your tasks without stress.\",\n    link: \"#\",\n    cta: \"Manage Your Time\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-3.svg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Automate Your Workflow with Task Runners\",\n    summary:\n      \"Use tools like Gulp, npm scripts, and GitHub Actions to automate repetitive development tasks.\",\n    link: \"#\",\n    cta: \"Automate Now\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-4.svg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Effective Daily Routines for Developers\",\n    summary:\n      \"Discover routines that top developers follow to stay productive, creative, and focused.\",\n    link: \"#\",\n    cta: \"Find Your Flow\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-5.svg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Master Git Like a Pro with These Shortcuts\",\n    summary:\n      \"Speed up your version control workflow with powerful Git aliases and tips.\",\n    link: \"#\",\n    cta: \"Speed Up Git\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-6.svg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Reducing Context Switching as a Developer\",\n    summary:\n      \"Minimize distractions and deep-dive into your code with focused work practices.\",\n    link: \"#\",\n    cta: \"Stay Focused\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-1.svg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Remote Work Setup: Tools for a Distraction-Free Environment\",\n    summary:\n      \"Set up your space and software stack for maximum productivity when working from home.\",\n    link: \"#\",\n    cta: \"Upgrade Your Setup\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-2.svg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Pomodoro for Coders: Does It Really Work?\",\n    summary:\n      \"A practical review of the Pomodoro technique and its effectiveness for software development.\",\n    link: \"#\",\n    cta: \"Try the Method\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-3.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Why Accessibility Should Be Part of Your MVP\",\n    summary:\n      \"Making your product inclusive from day one improves usability and reach.\",\n    link: \"#\",\n    cta: \"Learn Why\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-4.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Using ARIA Roles Correctly in Your Web App\",\n    summary:\n      \"Understand how to enhance screen reader support using ARIA roles and landmarks.\",\n    link: \"#\",\n    cta: \"Improve Semantics\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-5.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Color Contrast Tips for Better Readability\",\n    summary:\n      \"Learn how to choose accessible color combinations that meet WCAG standards.\",\n    link: \"#\",\n    cta: \"Fix Your Colors\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-6.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Keyboard Navigation: The Overlooked User Experience\",\n    summary:\n      \"Ensure your website is fully usable with just a keyboard, for accessibility and speed.\",\n    link: \"#\",\n    cta: \"Test Navigation\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-1.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Accessible Forms: Labels, Errors & Feedback\",\n    summary:\n      \"Improve the usability of your forms by ensuring screen readers and users receive clear instructions.\",\n    link: \"#\",\n    cta: \"Fix Your Forms\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-2.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Screen Reader Testing: A Beginner's Guide\",\n    summary:\n      \"How to test your site with popular screen readers and what to listen for.\",\n    link: \"#\",\n    cta: \"Start Testing\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-3.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Inclusive Design Thinking in UI Development\",\n    summary:\n      \"Design interfaces that consider users of all abilities from the start.\",\n    link: \"#\",\n    cta: \"Design for All\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-4.svg\",\n  },\n  {\n    category: \"Accessibility\",\n    title: \"Accessibility Audits: Tools and Checklists\",\n    summary:\n      \"Perform thorough accessibility audits with tools like Axe, Lighthouse, and manual checklists.\",\n    link: \"#\",\n    cta: \"Audit Now\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-5.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Lazy Loading Images with Modern HTML\",\n    summary:\n      \"Improve load times by using native lazy-loading and fallback strategies for images.\",\n    link: \"#\",\n    cta: \"Optimize Images\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-6.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Minifying JavaScript Without Breaking Your App\",\n    summary:\n      \"Best practices for minifying and tree-shaking your JS bundles to boost speed.\",\n    link: \"#\",\n    cta: \"Shrink Your Code\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-1.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Web Vitals Explained: CLS, LCP, FID\",\n    summary:\n      \"Learn how to measure and improve Core Web Vitals for a better user experience.\",\n    link: \"#\",\n    cta: \"Improve Vitals\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-2.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Server-Side Rendering vs Client-Side: Which is Faster?\",\n    summary:\n      \"Compare SSR and CSR strategies and when to use each for better performance.\",\n    link: \"#\",\n    cta: \"Explore Options\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-3.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Optimizing Fonts for Faster Page Loads\",\n    summary:\n      \"Learn techniques for loading fonts without blocking rendering or causing layout shifts.\",\n    link: \"#\",\n    cta: \"Speed Up Fonts\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-4.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Reduce JavaScript Bundle Size with Code Splitting\",\n    summary:\n      \"Use dynamic imports and route-based chunking to reduce initial load time.\",\n    link: \"#\",\n    cta: \"Split It Up\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-5.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Caching Strategies for Modern Web Apps\",\n    summary:\n      \"Leverage HTTP caching, service workers, and CDNs to improve speed and offline support.\",\n    link: \"#\",\n    cta: \"Cache Smarter\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-6.svg\",\n  },\n  {\n    category: \"Performance\",\n    title: \"Analyzing Performance Bottlenecks with Chrome DevTools\",\n    summary:\n      \"Use the Performance tab in DevTools to track down and fix runtime issues in your app.\",\n    link: \"#\",\n    cta: \"Analyze Now\",\n    thumbnail: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-1.svg\",\n  },\n];\n\nconst FilterFormSchema = z.object({\n  items: z.array(z.string()).refine((value) => value.length > 0, {\n    message: \"At least one category should be selected.\",\n  }),\n});\n\nconst FilterForm = ({ categories, onCategoryChange }: FilterFormProps) => {\n  const form = useForm<z.infer<typeof FilterFormSchema>>({\n    resolver: zodResolver(FilterFormSchema),\n    defaultValues: {\n      items: [CATEGORIES[0].value],\n    },\n  });\n\n  const handleCheckboxChange = useCallback(\n    (\n      checked: boolean | string,\n      categoryValue: string,\n      field: ControllerRenderProps<z.infer<typeof FilterFormSchema>, \"items\">,\n    ) => {\n      let updatedValues = checked\n        ? [...field.value, categoryValue]\n        : field.value.filter((value: string) => value !== categoryValue);\n\n      // If no categories are checked, add \"all\"\n      if (updatedValues.length === 0) {\n        form.setValue(\"items\", [\"all\"]);\n        onCategoryChange([\"all\"]);\n        return;\n      }\n\n      // Remove \"all\" if specific category is checked\n      if (updatedValues.includes(\"all\")) {\n        updatedValues = updatedValues.filter((v: string) => v !== \"all\");\n      }\n\n      // Avoid unnecessary updates\n      if (JSON.stringify(field.value) !== JSON.stringify(updatedValues)) {\n        form.setValue(\"items\", updatedValues);\n        onCategoryChange(updatedValues);\n      }\n    },\n    [form, onCategoryChange],\n  );\n\n  return (\n    <Form {...form}>\n      <form>\n        <FormField\n          control={form.control}\n          name=\"items\"\n          render={({ field }) => (\n            <FormItem className=\"flex w-full flex-wrap items-center gap-2.5\">\n              {categories.map((category) => {\n                const isChecked = field.value?.includes(category.value);\n                return (\n                  <FormItem\n                    key={category.value}\n                    className=\"flex flex-row items-start space-x-3 space-y-0\"\n                  >\n                    <FormControl>\n                      <Label className=\"bg-muted flex cursor-pointer items-center gap-2.5 rounded-full px-2.5 py-1.5\">\n                        <div>{category.label}</div>\n                        <Checkbox\n                          checked={isChecked}\n                          onCheckedChange={(checked) =>\n                            handleCheckboxChange(checked, category.value, field)\n                          }\n                        />\n                      </Label>\n                    </FormControl>\n                  </FormItem>\n                );\n              })}\n            </FormItem>\n          )}\n        />\n      </form>\n    </Form>\n  );\n};\n\nconst BlogsResult = ({ posts, categories }: BlogsResultProps) => {\n  const [visibleCount, setVisibleCount] = useState(POSTS_PER_PAGE);\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([\n    CATEGORIES[0].value,\n  ]);\n  const handleCategoryChange = useCallback((selected: string[]) => {\n    setSelectedCategories(selected);\n    setVisibleCount(POSTS_PER_PAGE);\n  }, []);\n\n  const handleLoadMore = useCallback(() => {\n    setVisibleCount((prev) => prev + POSTS_PER_PAGE);\n  }, []);\n  const filteredPosts = useMemo(() => {\n    return posts.filter(\n      (post) =>\n        selectedCategories.includes(post.category.toLowerCase()) ||\n        selectedCategories.includes(\"all\"),\n    );\n  }, [posts, selectedCategories]);\n\n  const postsToDisplay = filteredPosts.length > 0 ? filteredPosts : posts;\n\n  const hasMore = visibleCount < postsToDisplay.length;\n\n  return (\n    <div>\n      <FilterForm\n        categories={categories}\n        onCategoryChange={handleCategoryChange}\n      />\n      <div className=\"flex w-full flex-col gap-4 py-8 lg:gap-8\">\n        <div className=\"grid gap-10 md:grid-cols-2 lg:grid-cols-3\">\n          {postsToDisplay.slice(0, visibleCount).map((post) => (\n            <BlogCard key={post.title} {...post} />\n          ))}\n        </div>\n        <div className=\"flex justify-center\">\n          {hasMore && (\n            <Button variant=\"secondary\" onClick={handleLoadMore}>\n              Load More\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst BreadcrumbBlog = ({ breadcrumb }: BreadcrumbBlogProps) => {\n  return (\n    <Breadcrumb>\n      <BreadcrumbList>\n        {breadcrumb.map((item, i) => {\n          return (\n            <Fragment key={`${item.label}`}>\n              <BreadcrumbItem>\n                <BreadcrumbLink href={item.link}>{item.label}</BreadcrumbLink>\n              </BreadcrumbItem>\n              {i < breadcrumb.length - 1 ? (\n                <BreadcrumbSeparator>\n                  <Slash />\n                </BreadcrumbSeparator>\n              ) : null}\n            </Fragment>\n          );\n        })}\n      </BreadcrumbList>\n    </Breadcrumb>\n  );\n};\n\nconst BlogCard = ({ category, title, thumbnail, summary, link, cta }: Post) => {\n  return (\n    <a href={link} className=\"block h-full w-full\">\n      <Card className=\"size-full rounded-lg border py-0\">\n        <CardContent className=\"p-0\">\n          <div className=\"text-muted-foreground border-b p-2.5 text-sm font-medium leading-[1.2]\">\n            {category}\n          </div>\n          <AspectRatio ratio={1.520833333} className=\"overflow-hidden\">\n            <img\n              src={thumbnail}\n              alt={title}\n              className=\"block size-full object-cover object-center\"\n            />\n          </AspectRatio>\n          <div className=\"flex w-full flex-col gap-5 p-5\">\n            <h2 className=\"text-lg font-medium leading-tight md:text-xl\">\n              {title}\n            </h2>\n            <div className=\"w-full max-w-[20rem]\">\n              <p className=\"text-muted-foreground text-sm font-medium leading-[1.4]\">\n                {summary}\n              </p>\n            </div>\n            <div>\n              <Button size=\"sm\" variant=\"outline\">\n                {cta}\n                <ArrowRight />\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </a>\n  );\n};\n\nconst Blog27 = () => {\n  return (\n    <section className=\"pb-32\">\n      <div className=\"bg-muted bg-[url('https://deifkwefumgah.cloudfront.net/shadcnblocks/block/patterns/dot-pattern-2.svg')] bg-[length:3.125rem_3.125rem] bg-repeat\">\n        <div className=\"container flex flex-col items-start justify-start gap-16 py-20 lg:flex-row lg:items-center lg:justify-between\">\n          <div className=\"flex w-full flex-col justify-between gap-12\">\n            <div className=\"flex w-full max-w-[36rem] flex-col gap-8\">\n              <BreadcrumbBlog breadcrumb={BREADCRUMB} />\n              <div className=\"flex w-full flex-col gap-5\">\n                <h1 className=\"text-[2.5rem] font-semibold leading-[1.2] md:text-5xl lg:text-6xl\">\n                  Best Blog Articles\n                </h1>\n                <p className=\"text-muted-foreground text-xl leading-[1.4]\">\n                  The best blog is one that captivates readers with engaging,\n                  well-researched content presented in a clear and relatable\n                  way.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"w-full max-w-[27.5rem]\">\n            <BlogCard {...PRIMARY_POST} />\n          </div>\n        </div>\n      </div>\n      <div className=\"py-20\">\n        <div className=\"container flex flex-col gap-8\">\n          <h2 className=\"text-[1.75rem] font-medium leading-none md:text-[2.25rem] lg:text-[2rem]\">\n            All Blogs\n          </h2>\n          <div>\n            <BlogsResult posts={POSTS} categories={CATEGORIES} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport { Blog27 };\n"
}