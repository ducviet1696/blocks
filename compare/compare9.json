{
    "id": "compare9",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "compare9.jpg",
    "thumbnail": "compare9-4x3.webp",
    "description": "A comparative component showcases metrics & technical analysis of 3 models with status indicators, hover effects on data rows, and a detailed breakdown of each model's performance in a grid layout.",
    "createdAt": "2025-09-26T21:52:43.676Z",
    "dependencies": [
        "lucide-react",
        "next",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "table",
            "registryId": "shadcn",
            "registryItemUrl": "table",
            "docsUrl": "https://ui.shadcn.com/docs/components/table"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "compare"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Sep 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": false,
    "slug": "compare9",
    "collection": "block",
    "group": "compare",
    "code": "\"use client\";\n\nimport { CheckCircle, Minus, XCircle } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { useState } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nconst Compare9 = () => {\n  const [hoveredModel, setHoveredModel] = useState<string | null>(null);\n\n  const comparisonData = [\n    {\n      metric: \"Context Window\",\n      gpt4: { value: \"128K tokens\", status: \"worst\" },\n      claude: { value: \"200K tokens\", status: \"neutral\" },\n      gemini: { value: \"2M tokens\", status: \"best\" },\n    },\n    {\n      metric: \"Response Speed\",\n      gpt4: { value: \"1.2 sec\", status: \"best\" },\n      claude: { value: \"1.8 sec\", status: \"neutral\" },\n      gemini: { value: \"2.2 sec\", status: \"worst\" },\n    },\n    {\n      metric: \"Code Generation\",\n      gpt4: { value: \"94%\", status: \"neutral\" },\n      claude: { value: \"95%\", status: \"best\" },\n      gemini: { value: \"88%\", status: \"worst\" },\n    },\n    {\n      metric: \"Reasoning Score\",\n      gpt4: { value: \"91/100\", status: \"neutral\" },\n      claude: { value: \"92/100\", status: \"best\" },\n      gemini: { value: \"86/100\", status: \"worst\" },\n    },\n    {\n      metric: \"Input Tokens\",\n      gpt4: { value: \"$3.50/1M\", status: \"worst\" },\n      claude: { value: \"$3.00/1M\", status: \"neutral\" },\n      gemini: { value: \"$1.25/1M\", status: \"best\" },\n    },\n    {\n      metric: \"Output Tokens\",\n      gpt4: { value: \"$14.00/1M\", status: \"neutral\" },\n      claude: { value: \"$15.00/1M\", status: \"worst\" },\n      gemini: { value: \"$5.00/1M\", status: \"best\" },\n    },\n    {\n      metric: \"Rate Limit\",\n      gpt4: { value: \"50K RPM\", status: \"neutral\" },\n      claude: { value: \"40K RPM\", status: \"worst\" },\n      gemini: { value: \"60K RPM\", status: \"best\" },\n    },\n    {\n      metric: \"Free Tier\",\n      gpt4: { value: \"Very Limited\", status: \"worst\" },\n      claude: { value: \"Limited\", status: \"neutral\" },\n      gemini: { value: \"Generous\", status: \"best\" },\n    },\n  ];\n\n  return (\n    <section className=\"py-32\">\n      <div className=\"container mx-auto\">\n        <div className=\"relative overflow-hidden p-8\">\n          <div className=\"border-border/50 bg-background/50 relative overflow-hidden border backdrop-blur-sm\">\n            <Table>\n              <TableHeader>\n                <TableRow className=\"border-border/50\">\n                  <TableHead className=\"text-foreground font-semibold\">\n                    Metric\n                  </TableHead>\n                  <TableHead className=\"text-foreground text-center font-semibold\">\n                    <div className=\"flex items-center justify-center gap-2\">\n                      <Image\n                        src=\"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/openai-icon.svg\"\n                        alt=\"OpenAI\"\n                        width={16}\n                        height={16}\n                        className=\"h-4 w-4\"\n                      />\n                      GPT-4o\n                    </div>\n                  </TableHead>\n                  <TableHead className=\"text-foreground text-center font-semibold\">\n                    <div className=\"flex items-center justify-center gap-2\">\n                      <Image\n                        src=\"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/claude-icon.svg\"\n                        alt=\"Claude\"\n                        width={16}\n                        height={16}\n                        className=\"h-4 w-4\"\n                      />\n                      Claude 3.5\n                    </div>\n                  </TableHead>\n                  <TableHead className=\"text-foreground text-center font-semibold\">\n                    <div className=\"flex items-center justify-center gap-2\">\n                      <Image\n                        src=\"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/gemini-icon.svg\"\n                        alt=\"Gemini\"\n                        width={16}\n                        height={16}\n                        className=\"h-4 w-4\"\n                      />\n                      Gemini Pro 1.5\n                    </div>\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {comparisonData.map((row, index) => (\n                  <TableRow\n                    key={index}\n                    className=\"border-border/30 hover:bg-muted/30 transition-colors\"\n                  >\n                    <TableCell className=\"text-foreground py-4 font-medium\">\n                      {row.metric}\n                    </TableCell>\n                    <TableCell\n                      className={cn(\n                        \"cursor-pointer py-4 text-center font-medium transition-all duration-300\",\n                        row.gpt4.status === \"best\"\n                          ? \"bg-green-50 text-green-600 dark:bg-green-950/20\"\n                          : row.gpt4.status === \"worst\"\n                            ? \"bg-red-50 text-red-600 dark:bg-red-950/20\"\n                            : \"text-foreground bg-muted/50\",\n                        hoveredModel === \"gpt4\" &&\n                          \"bg-red-50/80 dark:bg-red-950/30\",\n                      )}\n                      onMouseEnter={() => setHoveredModel(\"gpt4\")}\n                      onMouseLeave={() => setHoveredModel(null)}\n                    >\n                      <div className=\"flex items-center justify-center gap-2\">\n                        {row.gpt4.status === \"best\" && (\n                          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                        )}\n                        {row.gpt4.status === \"worst\" && (\n                          <XCircle className=\"h-4 w-4 text-red-600\" />\n                        )}\n                        {row.gpt4.status === \"neutral\" && (\n                          <Minus className=\"text-muted-foreground h-4 w-4\" />\n                        )}\n                        <span>{row.gpt4.value}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell\n                      className={cn(\n                        \"cursor-pointer py-4 text-center font-medium transition-all duration-300\",\n                        row.claude.status === \"best\"\n                          ? \"bg-green-50 text-green-600 dark:bg-green-950/20\"\n                          : row.claude.status === \"worst\"\n                            ? \"bg-red-50 text-red-600 dark:bg-red-950/20\"\n                            : \"text-foreground bg-muted/50\",\n                        hoveredModel === \"claude\" &&\n                          \"bg-blue-50/80 dark:bg-blue-950/30\",\n                      )}\n                      onMouseEnter={() => setHoveredModel(\"claude\")}\n                      onMouseLeave={() => setHoveredModel(null)}\n                    >\n                      <div className=\"flex items-center justify-center gap-2\">\n                        {row.claude.status === \"best\" && (\n                          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                        )}\n                        {row.claude.status === \"worst\" && (\n                          <XCircle className=\"h-4 w-4 text-red-600\" />\n                        )}\n                        {row.claude.status === \"neutral\" && (\n                          <Minus className=\"text-muted-foreground h-4 w-4\" />\n                        )}\n                        <span>{row.claude.value}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell\n                      className={cn(\n                        \"cursor-pointer py-4 text-center font-medium transition-all duration-300\",\n                        row.gemini.status === \"best\"\n                          ? \"bg-green-50 text-green-600 dark:bg-green-950/20\"\n                          : row.gemini.status === \"worst\"\n                            ? \"bg-red-50 text-red-600 dark:bg-red-950/20\"\n                            : \"text-foreground bg-muted/50\",\n                        hoveredModel === \"gemini\" &&\n                          \"bg-green-50/80 dark:bg-green-950/30\",\n                      )}\n                      onMouseEnter={() => setHoveredModel(\"gemini\")}\n                      onMouseLeave={() => setHoveredModel(null)}\n                    >\n                      <div className=\"flex items-center justify-center gap-2\">\n                        {row.gemini.status === \"best\" && (\n                          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                        )}\n                        {row.gemini.status === \"worst\" && (\n                          <XCircle className=\"h-4 w-4 text-red-600\" />\n                        )}\n                        {row.gemini.status === \"neutral\" && (\n                          <Minus className=\"text-muted-foreground h-4 w-4\" />\n                        )}\n                        <span>{row.gemini.value}</span>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n\n          {/* Technical Analysis Section */}\n          <div className=\"border-border/50 bg-muted/20 relative mt-8 border p-6\">\n            <div className=\"relative\">\n              <h4 className=\"text-foreground mb-4 font-mono text-sm font-semibold uppercase tracking-wider\">\n                Technical Analysis\n              </h4>\n              <div className=\"text-muted-foreground space-y-3 font-mono text-xs\">\n                <div className=\"grid gap-2 md:grid-cols-3\">\n                  <div\n                    className={cn(\n                      \"border-border/30 bg-background/50 rounded border p-3 transition-all duration-300\",\n                      hoveredModel === \"gpt4\" &&\n                        \"bg-red-50/20 shadow-lg ring-2 ring-red-500/50 dark:bg-red-950/10\",\n                    )}\n                  >\n                    <div className=\"text-foreground mb-1 font-medium\">\n                      GPT-4o\n                    </div>\n                    <div className=\"space-y-1\">\n                      <div>\u2022 Response latency: 1.2s (best)</div>\n                      <div>\u2022 Code accuracy: 94% (neutral)</div>\n                      <div>\u2022 Reasoning score: 91/100 (neutral)</div>\n                      <div>\u2022 Input cost: $3.50/1M tokens (worst)</div>\n                      <div>\u2022 Rate limit: 50K RPM (neutral)</div>\n                    </div>\n                  </div>\n                  <div\n                    className={cn(\n                      \"border-border/30 bg-background/50 rounded border p-3 transition-all duration-300\",\n                      hoveredModel === \"claude\" &&\n                        \"bg-blue-50/20 shadow-lg ring-2 ring-blue-500/50 dark:bg-blue-950/10\",\n                    )}\n                  >\n                    <div className=\"text-foreground mb-1 font-medium\">\n                      Claude 3.5\n                    </div>\n                    <div className=\"space-y-1\">\n                      <div>\u2022 Response latency: 1.8s (neutral)</div>\n                      <div>\u2022 Code accuracy: 95% (best)</div>\n                      <div>\u2022 Reasoning score: 92/100 (best)</div>\n                      <div>\u2022 Input cost: $3.00/1M tokens (neutral)</div>\n                      <div>\u2022 Rate limit: 40K RPM (worst)</div>\n                    </div>\n                  </div>\n                  <div\n                    className={cn(\n                      \"border-border/30 bg-background/50 rounded border p-3 transition-all duration-300\",\n                      hoveredModel === \"gemini\" &&\n                        \"bg-green-50/20 shadow-lg ring-2 ring-green-500/50 dark:bg-green-950/10\",\n                    )}\n                  >\n                    <div className=\"text-foreground mb-1 font-medium\">\n                      Gemini Pro 1.5\n                    </div>\n                    <div className=\"space-y-1\">\n                      <div>\u2022 Context window: 2M tokens (best)</div>\n                      <div>\u2022 Input cost: $1.25/1M tokens (best)</div>\n                      <div>\u2022 Output cost: $5.00/1M tokens (best)</div>\n                      <div>\u2022 Rate limit: 60K RPM (best)</div>\n                      <div>\u2022 Free tier: Generous (best)</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"border-border/30 bg-background/50 mt-4 rounded border p-3\">\n                  <div className=\"text-foreground mb-2 font-medium\">\n                    Performance Summary\n                  </div>\n                  <div className=\"space-y-1\">\n                    <div>\n                      \u2022 GPT-4o: Fastest response times with strong code\n                      generation\n                    </div>\n                    <div>\n                      \u2022 Claude 3.5: Excellent reasoning capabilities and\n                      balanced performance\n                    </div>\n                    <div>\n                      \u2022 Gemini Pro 1.5: Best value proposition with competitive\n                      pricing\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport { Compare9 };\n"
}