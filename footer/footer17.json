{
    "id": "footer17",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "footer17.jpg",
    "thumbnail": "footer17-4x3.webp",
    "description": "A footer component with theme toggle, navigation links, social links, theme-specific logo, and a system status indicator.",
    "createdAt": "2025-09-26T22:09:43.676Z",
    "dependencies": [
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        },
        {
            "name": "drawer",
            "registryId": "shadcn",
            "registryItemUrl": "drawer",
            "docsUrl": "https://ui.shadcn.com/docs/components/drawer"
        },
        {
            "name": "dropdown-menu",
            "registryId": "shadcn",
            "registryItemUrl": "dropdown-menu",
            "docsUrl": "https://ui.shadcn.com/docs/components/dropdown-menu"
        },
        {
            "name": "toggle-group",
            "registryId": "shadcn",
            "registryItemUrl": "toggle-group",
            "docsUrl": "https://ui.shadcn.com/docs/components/toggle-group"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "footer"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Sep 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": false,
    "slug": "footer17",
    "collection": "block",
    "group": "footer",
    "code": "\"use client\";\nimport {\n  ChevronDown,\n  ExternalLink,\n  Facebook,\n  Github,\n  Linkedin,\n  MonitorCog,\n  Moon,\n  Sun,\n  Twitter,\n} from \"lucide-react\";\nimport { useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from \"@/components/ui/drawer\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { ToggleGroup, ToggleGroupItem } from \"@/components/ui/toggle-group\";\n\ntype linkType = \"DROPDOWN\" | \"LINK\" | \"EXTERNAL_LINK\";\n\ninterface NavigationLink {\n  type?: linkType;\n  name: string;\n  href?: string;\n  links?: Omit<NavigationLink, \"type\">[];\n}\n\ninterface Navigation {\n  title: string;\n  links: NavigationLink[];\n}\n\nconst NAVIGATION: Array<Navigation> = [\n  {\n    title: \"Solutions\",\n    links: [\n      {\n        type: \"LINK\",\n        name: \"Machine Learning\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Cloud Services\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Edge Computing\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Web Frameworks\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Data Analytics\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"CI/CD\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Load Balancing\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Encryption\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Performance Boost\",\n        href: \"#\",\n      },\n      {\n        type: \"EXTERNAL_LINK\",\n        name: \"API\",\n        href: \"#\",\n      },\n    ],\n  },\n  {\n    title: \"Help\",\n    links: [\n      {\n        type: \"EXTERNAL_LINK\",\n        name: \"Community Forum\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"API Docs\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Setup Guide\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"FAQ\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Partners\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Contact Support\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Pricing Info\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"System Status\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Security Notices\",\n        href: \"#\",\n      },\n    ],\n  },\n  {\n    title: \"Company\",\n    links: [\n      {\n        type: \"LINK\",\n        name: \"About Us\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Newsroom\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Jobs\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Events\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Press Releases\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Partners\",\n        href: \"#\",\n      },\n      {\n        type: \"LINK\",\n        name: \"Investor Relations\",\n        href: \"#\",\n      },\n      {\n        type: \"DROPDOWN\",\n        name: \"Legal\",\n        links: [\n          {\n            name: \"Cookie Preferences\",\n            href: \"#\",\n          },\n          {\n            name: \"Terms of Use\",\n            href: \"#\",\n          },\n          {\n            name: \"GDPR Compliance\",\n            href: \"#\",\n          },\n          {\n            name: \"Data Protection\",\n            href: \"#\",\n          },\n          {\n            name: \"Accessibility Statement\",\n            href: \"#\",\n          },\n        ],\n      },\n    ],\n  },\n];\n\nconst SOCIAL_LINKS = [\n  {\n    icon: Github,\n    name: \"Github\",\n    href: \"#\",\n  },\n  {\n    icon: Linkedin,\n    name: \"LinkedIn\",\n    href: \"#\",\n  },\n  {\n    icon: Facebook,\n    name: \"Facebook\",\n    href: \"#\",\n  },\n  {\n    icon: Twitter,\n    name: \"Twitter\",\n    href: \"#\",\n  },\n];\n\nconst HOME_LINK = \"#\";\n\nconst getLink = ({ type, href, name, links }: NavigationLink) => {\n  if (type == \"EXTERNAL_LINK\") {\n    return (\n      <a\n        href={href}\n        className=\"inline-flex cursor-pointer items-center gap-0.5 text-sm leading-5 text-muted-foreground hover:text-foreground\"\n      >\n        <div>{name}</div>\n        <ExternalLink className=\"size-3.5\" />\n      </a>\n    );\n  }\n\n  if (type == \"DROPDOWN\") {\n    return (\n      <>\n        <div className=\"block md:hidden\">\n          <Drawer>\n            <DrawerTrigger className=\"inline-flex cursor-pointer items-center gap-0.5 text-sm leading-5 text-muted-foreground hover:text-foreground\">\n              {name}\n              <ChevronDown className=\"size-3.5\" />\n            </DrawerTrigger>\n            <DrawerContent>\n              <DrawerHeader>\n                <DrawerTitle>{name}</DrawerTitle>\n                <div>\n                  {links?.map((link) => (\n                    <a\n                      href={link.href}\n                      className=\"block cursor-pointer rounded-lg px-2 py-2.5 text-sm! hover:bg-muted\"\n                      key={`drawer-footer-1-${link.name}`}\n                    >\n                      {link.name}\n                    </a>\n                  ))}\n                </div>\n              </DrawerHeader>\n              <DrawerFooter>\n                <DrawerClose asChild>\n                  <Button variant=\"outline\">Close</Button>\n                </DrawerClose>\n              </DrawerFooter>\n            </DrawerContent>\n          </Drawer>\n        </div>\n        <div className=\"hidden md:block\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <button className=\"inline-flex cursor-pointer items-center gap-0.5 text-sm leading-5 text-muted-foreground hover:text-foreground\">\n                {name}\n                <ChevronDown className=\"size-3.5\" />\n              </button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-56\">\n              {links?.map((link) => (\n                <DropdownMenuItem\n                  className=\"cursor-pointer rounded-lg py-2.5 text-sm!\"\n                  asChild\n                  key={`dropdown-footer-1-${link.name}`}\n                >\n                  <a href={link.href}>{link.name}</a>\n                </DropdownMenuItem>\n              ))}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <a\n      href={href}\n      className=\"cursor-pointer text-sm leading-5 text-muted-foreground hover:text-foreground\"\n    >\n      {name}\n    </a>\n  );\n};\n\nconst Footer17 = () => {\n  const [theme, setTheme] = useState<\"light\" | \"dark\">(\"light\");\n\n  const onThemeChange = (value: \"light\" | \"dark\" | \"system\") => {\n    if (value == \"system\") {\n      if (window.matchMedia) {\n        if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n          setTheme(\"dark\");\n        } else {\n          setTheme(\"light\");\n        }\n      }\n    } else {\n      setTheme(value);\n    }\n  };\n\n  return (\n    <section className={`py-32 ${theme} bg-background`}>\n      <footer className=\"container\">\n        <div className=\"flex w-full flex-col gap-8\">\n          <div className=\"grid w-full grid-cols-[repeat(2,minmax(auto,15rem))] gap-8 md:grid-cols-[repeat(4,1fr)_5rem] md:gap-0\">\n            {NAVIGATION.map((section) => (\n              <div key={`${section.title}`}>\n                <h2 className=\"mb-3 text-sm font-medium text-foreground\">\n                  {section.title}\n                </h2>\n                <ul>\n                  {section.links.map((link, i) => (\n                    <li key={`${link.name}-${i}`} className=\"py-1.5\">\n                      {getLink({\n                        name: link.name,\n                        href: link.href,\n                        type: link?.type,\n                        links: link?.links,\n                      })}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n            <div>\n              <h2 className=\"mb-3 text-sm font-medium text-foreground\">\n                Social\n              </h2>\n              <ul>\n                {SOCIAL_LINKS.map((link, i) => (\n                  <li className=\"py-1.5\" key={`social-links-footer-${i}`}>\n                    <a\n                      href={link.href}\n                      className=\"inline-flex cursor-pointer items-center gap-2 text-sm leading-5 text-muted-foreground hover:text-foreground\"\n                    >\n                      <link.icon className=\"size-3.5\" />\n                      {link.name}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <a\n              href={HOME_LINK}\n              className=\"col-[1/3] row-1 block size-9 md:col-[5/6] md:justify-self-end\"\n            >\n              <img\n                src=\"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/block-1.svg\"\n                alt=\"\"\n                className=\"size-full object-cover object-center\"\n                style={\n                  theme === \"dark\" ? { filter: \"invert(100%)\" } : undefined\n                }\n              />\n            </a>\n          </div>\n          <div className=\"mt-8 flex w-full flex-wrap items-center justify-between gap-4\">\n            <div>\n              <Button asChild variant=\"ghost\" className=\"text-foreground\">\n                <a href=\"#\">\n                  <div className=\"relative size-[0.4375rem]\">\n                    <span className=\"absolute top-1/2 left-1/2 z-10 size-[0.6875rem] -translate-1/2 animate-pulse rounded-full bg-green-400/50\" />\n                    <span className=\"absolute top-1/2 left-1/2 z-20 size-full -translate-1/2 rounded-full bg-green-500\" />\n                  </div>\n                  All systems normal\n                </a>\n              </Button>\n            </div>\n            <div>\n              <ToggleGroup\n                value={theme}\n                onValueChange={onThemeChange}\n                type=\"single\"\n                className=\"rounded-full border\"\n              >\n                <ToggleGroupItem\n                  value=\"system\"\n                  aria-label=\"Toggle system\"\n                  className=\"size-6 rounded-full!\"\n                >\n                  <MonitorCog className=\"size-3 stroke-foreground\" />\n                </ToggleGroupItem>\n                <ToggleGroupItem\n                  value=\"light\"\n                  aria-label=\"Toggle light\"\n                  className=\"size-6 rounded-full\"\n                >\n                  <Sun className=\"size-3 stroke-foreground\" />\n                </ToggleGroupItem>\n                <ToggleGroupItem\n                  value=\"dark\"\n                  aria-label=\"Toggle dark\"\n                  className=\"size-6 rounded-full!\"\n                >\n                  <Moon className=\"size-3 stroke-foreground\" />\n                </ToggleGroupItem>\n              </ToggleGroup>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </section>\n  );\n};\n\nexport { Footer17 };\n"
}